import datetime as dt
from constraint import *
import string

# https://www.wordfeudwoorden.nl/5letters/
corpus = [
    "Acryl",
    "Affix",
    "Aftyp",
    "Ampex",
    "Accus",
    "Axels",
    "Acces",
    "Addax",
    "Afbik",
    "Afduw",
    "Afhap",
    "Afpik",
    "Afwis",
    "Afzag",
    "Afzak",
    "Afzeg",
    "Bobby",
    "Buggy",
    "Babys",
    "Baggy",
    "Buddy",
    "Buxus",
    "Bitch",
    "Blijf",
    "Bodys",
    "Bogey",
    "Bytes",
    "Batch",
    "Cycli",
    "Campy",
    "Crazy",
    "Crypt",
    "Chick",
    "Citys",
    "Curry",
    "Check",
    "Chijl",
    "Chimp",
    "Click",
    "Cocci",
    "Cyste",
    "Chips",
    "Cinch",
    "Codex",
    "Dizzy",
    "Dolby",
    "Dummy",
    "Derby",
    "Dolly",
    "Dixit",
    "Dicht",
    "Ducht",
    "Dacht",
    "Dandy",
    "Derny",
    "Detox",
    "Docht",
    "Douch",
    "Drijf",
    "Dwaze",
    "Epoxy",
    "Enzym",
    "Ethyl",
    "Exact",
    "Exces",
    "Echec",
    "Exlid",
    "Expat",
    "Expos",
    "Echel",
    "Essay",
    "Exman",
    "Extra",
    "Echos",
    "Echte",
    "Edoch",
    "Bobby",
    "Buggy",
    "Babys",
    "Baggy",
    "Buddy",
    "Buxus",
    "Bitch",
    "Blijf",
    "Bodys",
    "Bogey",
    "Bytes",
    "Batch",
    "Guppy",
    "Gipsy",
    "Gymde",
    "Gyros",
    "Gijpt",
    "Glimp",
    "Grijp",
    "Gejij",
    "Geluw",
    "Gepuf",
    "Glijd",
    "Glipt",
    "Gluip",
    "Gruwt",
    "Gulpt",
    "Gabbe",
    "Happy",
    "Hobby",
    "Husky",
    "Hyper",
    "Hypes",
    "Hypet",
    "Hypos",
    "Hysop",
    "Hapax",
    "Heavy",
    "Helix",
    "Hypen",
    "Hyven",
    "Hydra",
    "Hymen",
    "Hymne",
    "Intyp",
    "Ijzig",
    "Inbox",
    "Ijzel",
    "Ijsco",
    "Ijzer",
    "Index",
    "Icing",
    "Ijlst",
    "Ijsje",
    "Ijver",
    "Ijzen",
    "Ijdel",
    "Ijker",
    "Ijkte",
    "Ijlde",
    "Jazzy",
    "Jurys",
    "Jicht",
    "Juich",
    "Jacht",
    "Jacks",
    "Jozef",
    "Jawel",
    "Jouwt",
    "Jubel",
    "Jumbo",
    "Jajem",
    "Jalap",
    "Jambe",
    "Javel",
    "Jemig",
    "Kinky",
    "Kwijl",
    "Kruch",
    "Kucht",
    "Kwijt",
    "Kwips",
    "Kicks",
    "Kickt",
    "Kijft",
    "Kocht",
    "Krach",
    "Kuche",
    "Kwelm",
    "Kwijn",
    "Kicke",
    "Kijkt",
    "Lynch",
    "Lobby",
    "Lycra",
    "Lymfe",
    "Lolly",
    "Lycea",
    "Laque",
    "Lysol",
    "Ladys",
    "Licht",
    "Lucht",
    "Luxer",
    "Luxes",
    "Lacht",
    "Latex",
    "Lijft",
    "Mythe",
    "Mixed",
    "Mixer",
    "Mixes",
    "Mixte",
    "Macht",
    "Match",
    "Mezzo",
    "Mixen",
    "Mocht",
    "Macho",
    "Meluw",
    "Mikwa",
    "Mikwe",
    "Muffe",
    "Murwt",
    "Nimby",
    "Nicht",
    "Nylon",
    "Nacht",
    "Niche",
    "Nijpt",
    "Nixen",
    "Nabij",
    "Nanny",
    "Nihil",
    "Nijgt",
    "Nipje",
    "Nufje",
    "Nabob",
    "Naijl",
    "Napje",
    "Opzij",
    "Omwip",
    "Ofwel",
    "Olijf",
    "Opduw",
    "Opheb",
    "Ophef",
    "Oppik",
    "Opvul",
    "Opwek",
    "Opwel",
    "Opzag",
    "Opzak",
    "Opzeg",
    "Opzit",
    "Oxers",
    "Proxy",
    "Puppy",
    "Pique",
    "Pixel",
    "Paddy",
    "Party",
    "Pitch",
    "Pizza",
    "Pylon",
    "Pacht",
    "Panty",
    "Patch",
    "Pijpt",
    "Pocht",
    "Ponys",
    "Prach",
    "Query",
    "Quilt",
    "Quark",
    "Quads",
    "Quasi",
    "Quant",
    "Queue",
    "Quota",
    "Quote",
    "Rugby",
    "Rally",
    "Remix",
    "Riyal",
    "Radix",
    "Relax",
    "Richt",
    "Rouxs",
    "Ready",
    "Recht",
    "Rijft",
    "Rijpt",
    "Ruche",
    "Rabbi",
    "Ranch",
    "Rayon",
    "Squaw",
    "Schuw",
    "Sulky",
    "Sylfe",
    "Schip",
    "Schub",
    "Sfinx",
    "Shoyu",
    "Spray",
    "Syrah",
    "Schab",
    "Schaf",
    "Schap",
    "Schep",
    "Schik",
    "Schil",
    "Thyrs",
    "Tipsy",
    "Tyfus",
    "Tommy",
    "Types",
    "Typte",
    "Toque",
    "Twijg",
    "Typen",
    "Taxis",
    "Taxol",
    "Taxus",
    "Teddy",
    "Telex",
    "Tjilp",
    "Toddy",
    "Uzelf",
    "Unzip",
    "Upper",
    "Uglis",
    "Uilig",
    "Uitje",
    "Uiver",
    "Unica",
    "Uwent",
    "Uiige",
    "Uitga",
    "Ukken",
    "Ultra",
    "Unief",
    "Ureum",
    "Urmde",
    "Vinyl",
    "Vieux",
    "Vacht",
    "Vecht",
    "Vlijm",
    "Vocht",
    "Vijlt",
    "Vipje",
    "Vlijt",
    "Vlouw",
    "Vamps",
    "Vazal",
    "Vezel",
    "Views",
    "Vijst",
    "Vleze",
    "Wicht",
    "Wacht",
    "Wijze",
    "Winch",
    "Wrijf",
    "Wazig",
    "Weckt",
    "Wijkt",
    "Wijlt",
    "Wippe",
    "Wulps",
    "Webbe",
    "Welft",
    "Wezel",
    "Whist",
    "Wigje",
    "Xerox",
    "Xeres",
    "Xenon",
    "Yucca",
    "Yells",
    "Yogis",
    "Yanks",
    "Yards",
    "Yelde",
    "Yuans",
    "Zloty",
    "Zwijg",
    "Zwijm",
    "Zicht",
    "Zucht",
    "Zwalp",
    "Zwamp",
    "Zwilk",
    "Zacht",
    "Zocht",
    "Zwalk",
    "Zwelg",
    "Zwerf",
    "Zwiep",
    "Zwijn",
    "Zwikt",
]

# https://www.lingowoorden.nl/categorie/5-letterwoorden/
lingo_corpus = [
    "appel",
    "aldus",
    "afwas",
    "aftel",
    "aarde",
    "altyd",
    "armen",
    "actie",
    "apart",
    "adres",
    "avond",
    "aders",
    "airco",
    "amper",
    "ander",
    "akker",
    "angst",
    "alles",
    "arena",
    "ademt",
    "alsof",
    "april",
    "allen",
    "autos",
    "alpen",
    "armoe",
    "admin",
    "appen",
    "alert",
    "award",
    "afnam",
    "algen",
    "acuut",
    "abuis",
    "aruba",
    "assen",
    "atlas",
    "aroma",
    "alarm",
    "boten",
    "balen",
    "beter",
    "bomen",
    "boren",
    "boven",
    "boxen",
    "brood",
    "broek",
    "brand",
    "breed",
    "benen",
    "beeld",
    "brief",
    "beten",
    "basis",
    "blauw",
    "beren",
    "buren",
    "banen",
    "bloed",
    "broer",
    "boete",
    "bewys",
    "bezig",
    "bezit",
    "blyft",
    "bodem",
    "beste",
    "begin",
    "bleek",
    "boord",
    "blykt",
    "begon",
    "beide",
    "beurt",
    "baren",
    "botst",
    "barre",
    "buurt",
    "breda",
    "beurs",
    "bevat",
    "bekyk",
    "bleef",
    "bozer",
    "begaf",
    "byval",
    "bruto",
    "blikt",
    "biedt",
    "baten",
    "brede",
    "bizar",
    "beest",
    "blote",
    "bosje",
    "blies",
    "buigt",
    "bloot",
    "bogen",
    "brein",
    "broos",
    "bouwt",
    "bevel",
    "byten",
    "broze",
    "baart",
    "broed",
    "bever",
    "bloei",
    "breuk",
    "boter",
    "byeen",
    "belet",
    "besef",
    "beige",
    "boxer",
    "boots",
    "brows",
    "blond",
    "breng",
    "blush",
    "bocht",
    "bezet",
    "balie",
    "buien",
    "bruin",
    "basic",
    "beleg",
    "batig",
    "boden",
    "bezat",
    "beker",
    "conus",
    "cello",
    "creme",
    "clubs",
    "cafe",
    "circa",
    "chaos",
    "cargo",
    "china",
    "chips",
    "claim",
    "cyber",
    "chili",
    "cobra",
    "cyfer",
    "cycli",
    "crime",
    "cover",
    "clara",
    "coole",
    "corps",
    "crash",
    "canon",
    "cupid",
    "check",
    "draai",
    "deden",
    "dalen",
    "derde",
    "delen",
    "dwaas",
    "daden",
    "dader",
    "dames",
    "diner",
    "datum",
    "dozen",
    "dreun",
    "duits",
    "dagen",
    "deren",
    "dwerg",
    "dwaal",
    "dwing",
    "druil",
    "droog",
    "draad",
    "dweil",
    "drank",
    "duren",
    "dwars",
    "drugs",
    "deels",
    "dient",
    "dacht",
    "droom",
    "duurt",
    "dates",
    "daten",
    "denkt",
    "dreef",
    "durft",
    "diepe",
    "drift",
    "duidt",
    "dikte",
    "dikke",
    "droeg",
    "debat",
    "dicht",
    "deals",
    "deens",
    "daagt",
    "daalt",
    "dutch",
    "deelt",
    "drive",
    "drukt",
    "diens",
    "domme",
    "drama",
    "dwaze",
    "dieet",
    "dorre",
    "dubai",
    "drong",
    "delft",
    "droge",
    "dyken",
    "delta",
    "dwong",
    "darts",
    "diego",
    "doden",
    "dwang",
    "draag",
    "duwen",
    "draak",
    "dankt",
    "doorn",
    "elven",
    "eigen",
    "enger",
    "engel",
    "elder",
    "enkel",
    "effen",
    "enorm",
    "enige",
    "ermee",
    "eerst",
    "extra",
    "einde",
    "eruit",
    "ether",
    "ervan",
    "echte",
    "erger",
    "eiken",
    "email",
    "eisen",
    "ertoe",
    "exact",
    "eters",
    "eraan",
    "elite",
    "elfde",
    "excel",
    "eiste",
    "emmen",
    "ergen",
    "eerde",
    "fiets",
    "friet",
    "files",
    "forel",
    "films",
    "feest",
    "fruit",
    "falen",
    "flora",
    "fauna",
    "feeen",
    "freak",
    "forse",
    "flink",
    "flauw",
    "fonds",
    "frans",
    "fraai",
    "feite",
    "forum",
    "focus",
    "faalt",
    "fries",
    "fikse",
    "fotos",
    "fagen",
    "fasen",
    "felle",
    "foute",
    "frame",
    "fusie",
    "fluor",
    "funky",
    "finse",
    "firma",
    "front",
    "folie",
    "fases",
    "geven",
    "gaven",
    "groen",
    "graai",
    "getal",
    "grens",
    "grond",
    "groef",
    "graal",
    "gewei",
    "games",
    "grote",
    "groet",
    "garen",
    "groep",
    "gezin",
    "gelyk",
    "groot",
    "gezag",
    "genie",
    "graag",
    "geeft",
    "goede",
    "groei",
    "gehad",
    "geuit",
    "geval",
    "geldt",
    "gezet",
    "gaten",
    "genre",
    "graaf",
    "gooit",
    "gemak",
    "goeie",
    "greep",
    "gejat",
    "gaart",
    "gedoe",
    "gloed",
    "guppy",
    "gevel",
    "gered",
    "glimp",
    "genen",
    "griep",
    "goden",
    "ghana",
    "graan",
    "gerst",
    "godin",
    "gebit",
    "glans",
    "gryze",
    "geluk",
    "gaver",
    "gamma",
    "gleed",
    "goten",
    "gilde",
    "genas",
    "gevat",
    "horen",
    "heren",
    "halen",
    "hagel",
    "haren",
    "helen",
    "harde",
    "hemel",
    "hoofd",
    "huren",
    "hamer",
    "haken",
    "heden",
    "hotel",
    "hobby",
    "hitte",
    "heeft",
    "hoger",
    "helpt",
    "hoedt",
    "helft",
    "hoort",
    "hoopt",
    "hecht",
    "hoede",
    "haast",
    "haard",
    "hoeft",
    "houdt",
    "huurt",
    "hangt",
    "hippe",
    "haalt",
    "haven",
    "hands",
    "hoest",
    "hekje",
    "hopen",
    "hielp",
    "hield",
    "hapje",
    "hetzy",
    "heter",
    "heuse",
    "hallo",
    "heten",
    "holte",
    "heide",
    "hindi",
    "haver",
    "harry",
    "hacks",
    "hints",
    "hevig",
    "halte",
    "hoezo",
    "haaks",
    "huwde",
    "hunne",
    "ieder",
    "index",
    "immer",
    "icoon",
    "inlog",
    "yzige",
    "inzet",
    "ibiza",
    "issue",
    "input",
    "infra",
    "yzelt",
    "india",
    "yskap",
    "inval",
    "ineen",
    "yssel",
    "imago",
    "yszee",
    "idaho",
    "ieren",
    "ierse",
    "items",
    "ivoor",
    "innam",
    "jovel",
    "jaren",
    "jicht",
    "jonge",
    "japan",
    "juist",
    "jacht",
    "jeugd",
    "jaagt",
    "joden",
    "joods",
    "jasje",
    "juich",
    "jeans",
    "jawel",
    "jemen",
    "jongs",
    "koken",
    "kreet",
    "koker",
    "kerst",
    "kegel",
    "koude",
    "kader",
    "krent",
    "kamer",
    "kaars",
    "kaart",
    "kraan",
    "krant",
    "keren",
    "kruid",
    "kerel",
    "kubus",
    "kraal",
    "kleur",
    "kroon",
    "klein",
    "korst",
    "klopt",
    "komen",
    "kreeg",
    "kyken",
    "keuze",
    "kwart",
    "krygt",
    "korte",
    "kabel",
    "kopen",
    "klant",
    "kogel",
    "koers",
    "kunst",
    "komst",
    "kiest",
    "kozen",
    "kwaad",
    "kapot",
    "kookt",
    "koste",
    "klaar",
    "koopt",
    "kroeg",
    "kopje",
    "klimt",
    "krimp",
    "kocht",
    "kloot",
    "kwade",
    "keken",
    "kloof",
    "koele",
    "knoop",
    "knipt",
    "kampt",
    "kabul",
    "konyn",
    "krans",
    "korps",
    "kende",
    "kreta",
    "kolen",
    "koper",
    "kongo",
    "keert",
    "kruis",
    "kaken",
    "kliko",
    "kenia",
    "kwast",
    "kruik",
    "kleed",
    "knaap",
    "klank",
    "keten",
    "lopen",
    "laten",
    "lelyk",
    "lepel",
    "links",
    "laden",
    "leven",
    "lezen",
    "lucht",
    "lenen",
    "laser",
    "lente",
    "licht",
    "lader",
    "leder",
    "lunch",
    "leger",
    "leden",
    "legen",
    "lagen",
    "lezer",
    "lever",
    "lingo",
    "langs",
    "legde",
    "luidt",
    "liegt",
    "leidt",
    "later",
    "laude",
    "latyn",
    "lager",
    "lange",
    "leren",
    "leeft",
    "leuke",
    "lyken",
    "lukte",
    "leert",
    "liter",
    "lynen",
    "laars",
    "leeuw",
    "losse",
    "loopt",
    "lyden",
    "lonen",
    "leest",
    "leuks",
    "lieve",
    "lease",
    "loont",
    "lande",
    "lexus",
    "likes",
    "liefs",
    "leent",
    "least",
    "limes",
    "leges",
    "linie",
    "louis",
    "lobby",
    "looks",
    "lover",
    "loper",
    "level",
    "loods",
    "label",
    "luier",
    "lacht",
    "lands",
    "loden",
    "maand",
    "malen",
    "maken",
    "media",
    "meter",
    "motor",
    "maten",
    "markt",
    "mazen",
    "molen",
    "meest",
    "meren",
    "myter",
    "mogen",
    "macht",
    "minst",
    "mooie",
    "maakt",
    "moest",
    "medio",
    "maart",
    "malta",
    "model",
    "mocht",
    "musea",
    "muren",
    "merkt",
    "moers",
    "meten",
    "menig",
    "mondt",
    "match",
    "meldt",
    "motie",
    "modus",
    "maker",
    "marge",
    "manen",
    "massa",
    "meent",
    "magma",
    "moord",
    "milde",
    "merel",
    "moren",
    "maine",
    "miami",
    "mengt",
    "menen",
    "mythe",
    "miste",
    "maagd",
    "magic",
    "matte",
    "metro",
    "maden",
    "matig",
    "motto",
    "noord",
    "nieuw",
    "negen",
    "namen",
    "neven",
    "nodig",
    "naden",
    "nooit",
    "naast",
    "nemen",
    "netto",
    "niets",
    "neemt",
    "nadat",
    "nibud",
    "nogal",
    "nacht",
    "noten",
    "nader",
    "noemt",
    "natte",
    "nabye",
    "notie",
    "nobel",
    "natst",
    "natie",
    "neppe",
    "nevel",
    "noors",
    "naakt",
    "nepal",
    "onder",
    "optel",
    "ovaal",
    "ovale",
    "onwel",
    "optie",
    "orden",
    "oppas",
    "omdat",
    "oogst",
    "opdat",
    "omzet",
    "opzet",
    "ophef",
    "ofwel",
    "ouder",
    "oogje",
    "oprit",
    "order",
    "onzin",
    "omweg",
    "orale",
    "omver",
    "opent",
    "otter",
    "omvat",
    "opera",
    "oxide",
    "oases",
    "opbod",
    "oever",
    "palen",
    "plein",
    "pegel",
    "paars",
    "piano",
    "pixel",
    "paden",
    "pasta",
    "pizza",
    "poten",
    "paard",
    "puber",
    "pauze",
    "pasen",
    "party",
    "poort",
    "praat",
    "plans",
    "prima",
    "puien",
    "peren",
    "pleit",
    "parys",
    "paren",
    "plukt",
    "pryst",
    "pakte",
    "panne",
    "proef",
    "pluto",
    "palet",
    "plaag",
    "plaat",
    "pylen",
    "prins",
    "polen",
    "party",
    "pater",
    "prooi",
    "patbo",
    "pypen",
    "panda",
    "potje",
    "plots",
    "plaza",
    "porto",
    "pilot",
    "petje",
    "print",
    "plant",
    "peper",
    "prees",
    "quota",
    "quote",
    "qatar",
    "robot",
    "ryden",
    "reken",
    "raden",
    "regen",
    "radio",
    "rente",
    "regio",
    "rugby",
    "reden",
    "roken",
    "ruzie",
    "ruist",
    "regel",
    "racen",
    "races",
    "radar",
    "recht",
    "raken",
    "reist",
    "ronde",
    "regie",
    "ruime",
    "route",
    "ruilt",
    "raakt",
    "rytje",
    "ruige",
    "rende",
    "ramde",
    "ratio",
    "ryder",
    "rover",
    "raket",
    "roest",
    "ramen",
    "roman",
    "reeks",
    "revue",
    "ryker",
    "roept",
    "reeds",
    "range",
    "richt",
    "rhode",
    "ryken",
    "river",
    "rigby",
    "rozen",
    "ruikt",
    "riekt",
    "retro",
    "staan",
    "staal",
    "speel",
    "steeg",
    "stoel",
    "stook",
    "steek",
    "schep",
    "stoep",
    "shirt",
    "samen",
    "sites",
    "sport",
    "spalk",
    "sjaal",
    "storm",
    "staat",
    "steun",
    "strak",
    "serie",
    "shows",
    "schat",
    "snoep",
    "sprak",
    "straf",
    "stapt",
    "stelt",
    "summa",
    "stond",
    "schip",
    "sterk",
    "spoor",
    "stryd",
    "stuks",
    "sloot",
    "stand",
    "sluit",
    "sfeer",
    "soort",
    "stoom",
    "start",
    "stygt",
    "slaap",
    "suste",
    "slaan",
    "stuur",
    "sloeg",
    "slang",
    "stopt",
    "schok",
    "skoda",
    "stoot",
    "super",
    "saudi",
    "setje",
    "steen",
    "shops",
    "smart",
    "snuit",
    "smaak",
    "scala",
    "stoer",
    "slikt",
    "steel",
    "stemt",
    "spoed",
    "schyf",
    "schol",
    "slaaf",
    "stoof",
    "saldo",
    "south",
    "saint",
    "sound",
    "score",
    "space",
    "siert",
    "scoor",
    "stage",
    "stamp",
    "stier",
    "songs",
    "spray",
    "saaie",
    "serum",
    "sorry",
    "slaag",
    "stufi",
    "sedan",
    "snoek",
    "snapt",
    "sober",
    "specs",
    "snack",
    "stamt",
    "sloop",
    "schot",
    "scene",
    "satyn",
    "slaat",
    "sluwe",
    "stoet",
    "truck",
    "tyden",
    "terug",
    "typen",
    "talen",
    "taboe",
    "tegel",
    "taart",
    "tafel",
    "trouw",
    "teken",
    "teren",
    "taken",
    "treur",
    "tenen",
    "titel",
    "thuis",
    "tiara",
    "teder",
    "tegen",
    "tests",
    "tokio",
    "trekt",
    "tonen",
    "toont",
    "tuner",
    "trein",
    "tempo",
    "tekst",
    "thema",
    "total",
    "tocht",
    "texel",
    "trucs",
    "telde",
    "tesla",
    "tonyn",
    "treft",
    "tweet",
    "tanks",
    "tankt",
    "tydje",
    "tydig",
    "teams",
    "tolde",
    "trend",
    "tamme",
    "texas",
    "tampa",
    "tarwe",
    "tabak",
    "traag",
    "tibet",
    "taiga",
    "toffe",
    "twist",
    "tunes",
    "tapyt",
    "teint",
    "tipje",
    "trolt",
    "tweed",
    "topic",
    "tyger",
    "tonga",
    "toren",
    "talud",
    "teuge",
    "touch",
    "tenue",
    "uiten",
    "uniek",
    "uitte",
    "units",
    "velen",
    "vyfde",
    "vloer",
    "video",
    "varen",
    "vegen",
    "veren",
    "vader",
    "vaten",
    "vuren",
    "vrouw",
    "vlees",
    "vogel",
    "vroeg",
    "vezel",
    "veins",
    "volgt",
    "vorig",
    "vindt",
    "visie",
    "vaker",
    "vraag",
    "vanaf",
    "vries",
    "vaart",
    "vulde",
    "voelt",
    "volle",
    "vecht",
    "villa",
    "vaste",
    "virus",
    "voert",
    "voedt",
    "vloot",
    "vloog",
    "voren",
    "verre",
    "verte",
    "vormt",
    "vette",
    "vrede",
    "vyand",
    "vuile",
    "volvo",
    "versa",
    "vangt",
    "voort",
    "venus",
    "vorst",
    "voegt",
    "vuist",
    "vyver",
    "verse",
    "visum",
    "vouwt",
    "vieze",
    "volop",
    "viert",
    "venen",
    "vryer",
    "vlaai",
    "vegas",
    "vlieg",
    "voice",
    "valse",
    "vinyl",
    "valet",
    "vocht",
    "vazen",
    "vurig",
    "veler",
    "woord",
    "wagen",
    "wonen",
    "waren",
    "warme",
    "weten",
    "water",
    "weren",
    "wazig",
    "wegen",
    "weven",
    "wyken",
    "wezen",
    "weken",
    "wordt",
    "waard",
    "winst",
    "wyzen",
    "wacht",
    "wilde",
    "werkt",
    "welke",
    "woont",
    "wanen",
    "wynen",
    "witte",
    "wisse",
    "wyten",
    "woede",
    "wenst",
    "wapen",
    "weegt",
    "warmt",
    "werpt",
    "wenen",
    "worst",
    "weesp",
    "wraak",
    "xenon",
    "yacht",
    "yacob",
    "zwaar",
    "zware",
    "zesde",
    "zagen",
    "zalig",
    "zomer",
    "zeden",
    "zwart",
    "zeven",
    "zicht",
    "zadel",
    "zoals",
    "zaken",
    "zeker",
    "zaten",
    "zelfs",
    "zulke",
    "zonde",
    "zorgt",
    "zodra",
    "zowel",
    "zover",
    "zodat",
    "zette",
    "zalen",
    "zegde",
    "zoden",
    "zowat",
    "zocht",
    "zwemt",
    "zotte",
    "zynde",
    "zacht",
    "zoekt",
    "zweed",
    "zepen",
    "zones",
    "zinkt",
    "zeeys",
    "zadig",
    "zwaan",
    "zetje",
    "zoete",
    "zakje",
    "zetel",
    "zakte",
    "zwoer",
    "zweet",
    "zulks",
    "zonen",
    "zegel",
    "zeeuw",
]

corpus_lower = list(
    set([word.lower() for word in corpus + lingo_corpus if len(word) == 5])
)
letters_unique_indices = [
    i for i, word in enumerate(corpus_lower) if len(set(word)) == len(word)
]
# unique_words = [corpus_lower[letter] for letter in letters_unique_indices]
#
# z = list(set([word[0] for word in unique_words]))
# w = list(set([word[1] for word in unique_words]))
# k = list(set([word[2] for word in unique_words]))
# y = list(set([word[3] for word in unique_words]))
# x = list(set([word[4] for word in unique_words]))
z = list(string.ascii_lowercase)
w = list(string.ascii_lowercase)
k = list(string.ascii_lowercase)
y = list(string.ascii_lowercase)
x = list(string.ascii_lowercase)
yw = list(string.ascii_lowercase)
alphabet = list(string.ascii_lowercase)


# def word_unique(x1, x2, x3, x4, x5):
#     return x1 + x2 + x3 + x4 + x5 in unique_words


def in_corpus(x1, x2, x3, x4, x5):
    return x1 + x2 + x3 + x4 + x5 in corpus_lower


problem = Problem()


def add_a():
    print("Adding A...")
    problem.addVariable("a1", z)
    problem.addVariable("a2", w)
    problem.addVariable("a3", k)
    problem.addVariable("a4", y)
    problem.addVariable("a5", x)

    problem.addConstraint(
        lambda x1, x2, x3, x4, x5: in_corpus(x1, x2, x3, x4, x5),
        ("a1", "a2", "a3", "a4", "a5"),
    )


def add_b():
    print("Adding B...")
    # B
    problem.addVariable("b1", k)
    problem.addVariable("b2", alphabet)
    problem.addVariable("b3", alphabet)
    problem.addVariable("b4", y)
    problem.addVariable("b5", x)

    problem.addConstraint(
        lambda x1, x2, x3, x4, x5: in_corpus(x1, x2, x3, x4, x5),
        ("b1", "b2", "b3", "b4", "b5"),
    )
    problem.addConstraint(
        lambda x1, x2, x3, x4, x5, var: (
            (x1 != var) & (x2 != var) & (x3 != var) & (x4 != var) & (x5 != var)
        ),
        ("b1", "b2", "b3", "b4", "b5", "a2"),
    )
    problem.addConstraint(
        lambda x1, x2, x3, x4, x5, var: (
            (x1 != var) & (x2 != var) & (x3 != var) & (x4 != var) & (x5 != var)
        ),
        ("b1", "b2", "b3", "b4", "b5", "a1"),
    )

    # K
    problem.addConstraint(
        lambda x1, x2: x1 == x2,
        ("a3", "b1"),
    )

    # X
    problem.addConstraint(
        lambda x1, x2: x1 == x2,
        ("a5", "b5"),
    )

    # Y
    problem.addConstraint(
        lambda x1, x2: x1 == x2,
        ("a4", "b4"),
    )


# C
def add_c():
    print("Adding C...")
    problem.addVariable("c1", x)
    problem.addVariable("c2", alphabet)
    problem.addVariable("c3", k)
    problem.addVariable("c4", alphabet)
    problem.addVariable("c5", k)

    problem.addConstraint(
        lambda x1, x2, x3, x4, x5: in_corpus(x1, x2, x3, x4, x5),
        ("c1", "c2", "c3", "c4", "c5"),
    )

    problem.addConstraint(
        lambda x1, x2, x3, x4, x5, var: (
            (x1 != var) & (x2 != var) & (x3 != var) & (x4 != var) & (x5 != var)
        ),
        ("c1", "c2", "c3", "c4", "c5", "a4"),
    )

    problem.addConstraint(
        lambda x1, x2, x3, x4, x5, var: (
            (x1 != var) & (x2 != var) & (x3 != var) & (x4 != var) & (x5 != var)
        ),
        ("c1", "c2", "c3", "c4", "c5", "a1"),
    )

    problem.addConstraint(
        lambda x1, x2, x3, x4, x5, var: (
            (x1 != var) & (x2 != var) & (x3 != var) & (x4 != var) & (x5 != var)
        ),
        ("c1", "c2", "c3", "c4", "c5", "b2"),
    )

    # K

    problem.addConstraint(
        lambda x1, x2: x1 == x2,
        ("a3", "c3"),
    )
    problem.addConstraint(
        lambda x1, x2: x1 == x2,
        ("a3", "c5"),
    )

    # X
    problem.addConstraint(
        lambda x1, x2: x1 == x2,
        ("a5", "c1"),
    )


def add_d():
    print("Adding D...")

    # D
    problem.addVariable("d1", alphabet)
    problem.addVariable("d2", alphabet)
    problem.addVariable("d3", alphabet)
    problem.addVariable("d4", k)
    problem.addVariable("d5", k)

    problem.addConstraint(
        lambda x1, x2, x3, x4, x5: in_corpus(x1, x2, x3, x4, x5),
        ("d1", "d2", "d3", "d4", "d5"),
    )

    # no X in D
    problem.addConstraint(
        lambda x1, x2, x3, x4, x5, var: (
            (x1 != var) & (x2 != var) & (x3 != var) & (x4 != var) & (x5 != var)
        ),
        ("d1", "d2", "d3", "d4", "d5", "a5"),
    )

    # no Z in D
    problem.addConstraint(
        lambda x1, x2, x3, x4, x5, var: (
            (x1 != var) & (x2 != var) & (x3 != var) & (x4 != var) & (x5 != var)
        ),
        ("d1", "d2", "d3", "d4", "d5", "a1"),
    )

    # Alpha
    problem.addConstraint(
        lambda x1, x2: x1 == x2,
        ("d2", "c2"),
    )

    # K
    problem.addConstraint(
        lambda x1, x2: x1 == x2,
        ("d4", "a3"),
    )

    problem.addConstraint(
        lambda x1, x2: x1 == x2,
        ("d5", "a3"),
    )


def add_e():
    print("Adding E...")

    # E
    problem.addVariable("e1", k)
    problem.addVariable("e2", alphabet)
    problem.addVariable("e3", z)
    problem.addVariable("e4", k)
    problem.addVariable("e5", yw)

    problem.addConstraint(
        lambda x1, x2, x3, x4, x5: in_corpus(x1, x2, x3, x4, x5),
        ("e1", "e2", "e3", "e4", "e5"),
    )

    # No Alpha in E
    problem.addConstraint(
        lambda x1, x2, x3, x4, x5, var: (
            (x1 != var) & (x2 != var) & (x3 != var) & (x4 != var) & (x5 != var)
        ),
        ("e1", "e2", "e3", "e4", "e5", "d2"),
    )

    # No X in E
    problem.addConstraint(
        lambda x1, x2, x3, x4, x5, var: (
            (x1 != var) & (x2 != var) & (x3 != var) & (x4 != var) & (x5 != var)
        ),
        ("e1", "e2", "e3", "e4", "e5", "a5"),
    )

    # K
    problem.addConstraint(
        lambda x1, x2: x1 == x2,
        ("e1", "a3"),
    )
    problem.addConstraint(
        lambda x1, x2: x1 == x2,
        ("e4", "a3"),
    )

    # Z
    problem.addConstraint(
        lambda x1, x2: x1 == x2,
        ("e3", "a1"),
    )

    # Y or W
    problem.addConstraint(
        lambda x1, x2, x3: x1 == x2 or x1 == x3,
        ("e5", "a2", "a4"),
    )


def add_f():
    print("Adding F...")

    # F
    problem.addVariable("f1", yw)
    problem.addVariable("f2", alphabet)
    problem.addVariable("f3", yw)
    problem.addVariable("f4", alphabet)
    problem.addVariable("f5", x)

    problem.addConstraint(
        lambda x1, x2, x3, x4, x5: in_corpus(x1, x2, x3, x4, x5),
        ("f1", "f2", "f3", "f4", "f5"),
    )

    # No Z in F
    problem.addConstraint(
        lambda x1, x2, x3, x4, x5, var: (
            (x1 != var) & (x2 != var) & (x3 != var) & (x4 != var) & (x5 != var)
        ),
        ("f1", "f2", "f3", "f4", "f5", "a1"),
    )

    # No K in F
    problem.addConstraint(
        lambda x1, x2, x3, x4, x5, var: (
            (x1 != var) & (x2 != var) & (x3 != var) & (x4 != var) & (x5 != var)
        ),
        ("f1", "f2", "f3", "f4", "f5", "a3"),
    )

    # Y or W
    problem.addConstraint(
        lambda x1, x2, x3: x1 == x2 or x1 == x3,
        ("f1", "a2", "a4"),
    )
    problem.addConstraint(
        lambda x1, x2, x3: x1 == x2 or x1 == x3,
        ("f3", "a2", "a4"),
    )

    # X
    problem.addConstraint(
        lambda x1, x2: x1 == x2,
        ("a5", "f5"),
    )

    # TODO: Contains a Y?
    problem.addConstraint(
        lambda x1, x2, x3, x4, var: (
            (x1 == var) or (x2 == var) or (x3 == var) or (x4 == var)
        ),
        ("f1", "f2", "f3", "f4", "a4"),
    )


def add_g():
    print("Adding G...")

    problem.addVariable("g1", z)
    problem.addVariable("g2", k)
    problem.addVariable("g3", alphabet)
    problem.addVariable("g4", alphabet)
    problem.addVariable("g5", alphabet)

    problem.addConstraint(
        lambda x1, x2, x3, x4, x5: in_corpus(x1, x2, x3, x4, x5),
        ("g1", "g2", "g3", "g4", "g5"),
    )

    # No X in G
    problem.addConstraint(
        lambda x1, x2, x3, x4, x5, var: (
            (x1 != var) & (x2 != var) & (x3 != var) & (x4 != var) & (x5 != var)
        ),
        ("g1", "g2", "g3", "g4", "g5", "a5"),
    )

    # No Y in G
    problem.addConstraint(
        lambda x1, x2, x3, x4, x5, var: (
            (x1 != var) & (x2 != var) & (x3 != var) & (x4 != var) & (x5 != var)
        ),
        ("g1", "g2", "g3", "g4", "g5", "a4"),
    )

    # Z
    problem.addConstraint(
        lambda x1, x2: x1 == x2,
        ("a1", "g1"),
    )

    # K
    problem.addConstraint(
        lambda x1, x2: x1 == x2,
        ("a3", "g2"),
    )

    # Alpha
    problem.addConstraint(
        lambda x1, x2: x1 == x2,
        ("c3", "g3"),
    )


add_a()
add_b()
add_c()
# add_d()
# add_e()
# add_f()
add_g()


print("Finding 1 solution...")
sol1 = problem.getSolution()
print(sol1)
print("Finding 1 solution complete...")

print("Finding all solutions...")
start = dt.datetime.now()
solutions = problem.getSolutions()
end = dt.datetime.now()
print(f"Time taken: {(end-start).total_seconds()} seconds")
print(f"# solutions: {len(solutions)}")

for col in list("abcdefg"):
    try:
        words_found = [
            "".join([solution[f"{col}{i}"] for i in range(1, 6)])
            for solution in solutions
        ]
        print(f"{col}: {words_found}")
    except KeyError:
        continue
